<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hawkular Blog</title>
    <link>http://www.hawkular.org</link>
    <atom:link href="http://www.hawkular.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>Blog posts about Hawkular - the open source monitoring and management platform</description>
    <language>en-us</language>
    <pubDate>Wed, 9 Sep 2015 10:47:36 +0000</pubDate>
    <lastBuildDate>Wed, 9 Sep 2015 10:47:36 +0000</lastBuildDate>

    <item>
      <title>Monitoring Rails App using Hawkular Metrics</title>
      <link>http://www.hawkular.org/blog/2015/09/03/monitoring-rails-using-hawkular-metrics.html</link>
      <author>noreply@hawkular.org (Libor Zoubek)</author>
      <pubDate>Thu, 3 Sep 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/09/03/monitoring-rails-using-hawkular-metrics.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post I am going to show a way to monitor Rails application performance using Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_setting_up_hawkular_metrics&quot;&gt;Setting up Hawkular Metrics&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several ways of setting up Hawkular Metrics standalone server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Build &amp;amp; deploy&lt;/strong&gt; - follow &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics&quot;&gt;Hawkular Metrics Readme&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Docker image&lt;/strong&gt; - start &lt;a href=&quot;https://hub.docker.com/r/hawkular/hawkular-metrics/&quot;&gt;Hawkular Metrics Docker Image&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Public instance&lt;/strong&gt; - use &lt;a href=&quot;http://livingontheedge.hawkular.org/hawklar/metrics&quot; class=&quot;bare&quot;&gt;http://livingontheedge.hawkular.org/hawklar/metrics&lt;/a&gt; which runs full Hawkular including Metrics. But be sure your data will get lost at some point as this instance gets rebuilt/cleaned up from time to time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_ruby_client&quot;&gt;Hawkular Ruby Client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently we started to work on a &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;hawkular-client&lt;/a&gt; in Ruby. So far we have implemented APIs for Hawkular Metrics. In this post we&amp;#8217;ll use the client to push metric data, but it can also retrieve data for further analysis or reports, for more see &lt;a href=&quot;http://www.hawkular.org/hawkular-client-ruby/Hawkular/Metrics/Client.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_monitoring_rails_application&quot;&gt;Monitoring Rails Application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several ways to monitor your Rails application&amp;#8217;s performance. The way being shown here is pretty easy to implement, but requires modifications in Rails application. It takes advantage of &lt;code&gt;around_filter&lt;/code&gt; of main ApplicationController. Within this filter we&amp;#8217;re going to measure each controller&amp;#8217;s response time to handle request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_rails_demo_application&quot;&gt;Rails Demo Application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;ve created simple Rails4 application called &lt;a href=&quot;https://github.com/lzoubek/rails-demo&quot;&gt;rails-demo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I added the dependency on &lt;a href=&quot;https://rubygems.org/gems/hawkular-client&quot;&gt;hawkular-client&lt;/a&gt; gem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/lzoubek/rails-demo/blob/master/app/controllers/application_controller.rb&quot;&gt;Application controller&lt;/a&gt; code is pretty easy&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;require &quot;hawkularclient&quot;

class ApplicationController &amp;lt; ActionController::Base

  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception


  class MetricsReporter

    def initialize
      tenant_id = &quot;hawkular.org&quot;
      # create hawkular metrics client &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
      @client = Hawkular::Metrics::Client::new(&quot;http://localhost:8080/hawkular/metrics&quot;,&quot;&quot;,&quot;&quot;,{:tenant =&amp;gt; tenant_id})
      # create tenant in case it does not exist
      if @client.tenants.query.select { |tenant|  tenant.id == tenant_id}.empty?
      	@client.tenants.create(tenant_id)
      end
    end

    def around(controller, &amp;amp;block)
      # measure measure measure
      now = Time.now
      block.call
      time_spent = Time.now - now
      # metric ID must be unique within tenant &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
      gauge = &quot;App.#{controller.class.name}:#{controller.params[:action]}&quot;
      # make sure metric definition is created &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
      @client.gauges.create({:id =&amp;gt; gauge, :tags =&amp;gt; {:app =&amp;gt; &quot;App&quot;}}) rescue
      # report time in milliseconds
      @client.gauges.push_data(gauge ,{:value =&amp;gt; time_spent * 1000})
    end

  end

  # enable filter
  around_filter MetricsReporter::new

end&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We create Hawkular Metrics &lt;strong&gt;@client&lt;/strong&gt;. Point it to your instance URL, leave user/pass empty (as this has not been implemented yet) and set &lt;strong&gt;tenant&lt;/strong&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We encode our application Name, controller name and controller action into metric ID. So we have different metrics for listing objects and ie. editing an object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to create metric definition with our tags, so we&amp;#8217;re able to find all metrics related to rails-demo app later. This line is not required in case you don&amp;#8217;t want to assign tags to your metric definitions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s start Rails dev environment&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install rails
git clone https://github.com/lzoubek/rails-demo.git
cd rails-demo
bundler install
bin/rake db:migrate RAILS_ENV=development
rails server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By now, WEBrick should be listening on localhost, open &lt;a href=&quot;http://localhost:3000/products&quot; class=&quot;bare&quot;&gt;http://localhost:3000/products&lt;/a&gt; and in case there is no error displayed congratulations, we are monitoring &lt;strong&gt;rails-demo&lt;/strong&gt;! Let&amp;#8217;s start hitting the UI with some more requests using helper bash script located in &lt;code&gt;rails-demo&lt;/code&gt; repository&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./hit.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this time we are simulating traffic on &lt;strong&gt;rails-demo&lt;/strong&gt; application and pushing controller&amp;#8217;s response times to Hawkular Metrics service.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_the_results&quot;&gt;The Results&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently Hawkular Metrics (standalone) has no UI. But there is a bunch of useful angular components like &lt;a href=&quot;https://github.com/hawkular/hawkular-charts&quot;&gt;hawkular-charts&lt;/a&gt;, so I wrote simple UI which can at least find metric definitions by tags and draw metric data into line chart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To watch metric data from rails-demo application open &lt;a href=&quot;http://lzoubek.github.io/hawkular-metrics-ui-demo&quot;&gt;Hawkular Metrics UI Demo&lt;/a&gt;, fill in &lt;strong&gt;Metrics API URL&lt;/strong&gt; (must be reachable from browser), &lt;strong&gt;Tenant ID&lt;/strong&gt; and tags.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;rails-controller-response-times&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/hawkular-metrics-demo-ui.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-metrics-demo-ui.png&quot; alt=&quot;Rails Controller response times&quot; width=&quot;800&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you may have already noticed, Hawkular Metrics server perfomance can have negative impact on rails-demo application performance because we synchronously push the data within around_filter code.  Even the fact, that rails application must be modified in order to be monitored might not be a good thing. In the next blog post I&amp;#8217;ll write a simple service that is going to parse rails log files and report  data to Hawkular Metrics. In fact, it would be awesome to reuse &lt;a href=&quot;https://github.com/scoutapp/scout-plugins&quot;&gt;scout plugins&lt;/a&gt; and forward their reports into Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Having metrics is only one piece in puzzle. Integration with &lt;a href=&quot;/docs/components/alerts/index.html&quot;&gt;Hawkular Alerts&lt;/a&gt; will let you detect performance regressions or unexpected loads.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The fourth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2015/08/27/hawkular-1.0.0.Alpha4-released.html</link>
      <author>noreply@hawkular.org (Peter Palaga)</author>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/27/hawkular-1.0.0.Alpha4-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce the release of its fourth milestone 1.0.0.Alpha4.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_improvements_in_alerts_definitions&quot;&gt;Improvements in Alerts definitions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alerts are there to inform the user about an occurrence of a problem in some of the monitored resources. The present
release adds some new configuration dialogs and improves the existing ones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are new configuration options to setup Alerts based on JVM Heap Usage and Garbage Collection.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-jvm-heap-usage-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-jvm-heap-usage-alerts.png&quot; alt=&quot;JVM Alert Settings for Heap Usage&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. JVM Alert Settings for Heap Usage&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is a new dialog to configure Alerts for Datasources.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ds-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-ds-alerts.png&quot; alt=&quot;JVM Alert Settings for Datasources&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. JVM Alert Settings for Datasources&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And there are new Specialized dialogs to configure Alerts for URLs&apos; Availability and Response Time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-url-avail-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-url-avail-alerts.png&quot; alt=&quot;JVM Alert Settings for URLs&apos; Availability&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Settings for URLs&apos; Availability&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_red_hat_access_portal_integration&quot;&gt;Red Hat Access Portal Integration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We added an integration with the &lt;a href=&quot;https://access.redhat.com/&quot;&gt;Red Hat Access Portal&lt;/a&gt; to Hawkular.
Users with valid Access Portal credentials are now able to browse the Knowledge Base, view and create Support Cases
using the Hawkular user interface. On the future releases, we plan to improve this integration by adding more features.
If that sounds interesting to you, we are looking forward for your feedback on #hawkular channel on
&lt;a href=&quot;https://freenode.net/&quot;&gt;Freenode&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-rh-access&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-rh-access.png&quot; alt=&quot;Open a ticket on Red Hat Access portal using the Hawkular UI&quot; width=&quot;400&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. Open a ticket on Red Hat Access portal using the Hawkular UI&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_backend&quot;&gt;Backend&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While these changes in backend are not used by the UI yet, they present an important step towards a new UI functionality
in future releases:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Inventory now provides an API for configuration of resources and Hawkular Agent is using this API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Bus and Agent now support the execution of operations on any resource
&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-483&quot;&gt;HAWKULAR-483&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Bus offers a new infrastructure to stream large data from UI to monitored Application Servers.
This is especially important for another feature that was added in the backend, namely the support for deploying
applications on monitored Application Servers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_other_minor_tweaks_and_fixes&quot;&gt;Other minor tweaks and fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-488&quot;&gt;HAWKULAR-488&lt;/a&gt; - Display IP Address for Application Servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-254&quot;&gt;HAWKULAR-254&lt;/a&gt; - Blank screen on Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-336&quot;&gt;HAWKULAR-336&lt;/a&gt; - Inconsistent time information on URL details page&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-406&quot;&gt;HAWKULAR-406&lt;/a&gt; - Same data for 2 different Wfly servers shown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-494&quot;&gt;HAWKULAR-494&lt;/a&gt; - Datasources not unique per server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-497&quot;&gt;HAWKULAR-497&lt;/a&gt; - Resources in inventory are lost at restart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-521&quot;&gt;HAWKULAR-521&lt;/a&gt; - &quot;http://livingontheedge.hawkular.org&quot; isn&amp;#8217;t using the hawkular favicon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-526&quot;&gt;HAWKULAR-526&lt;/a&gt; - Downtime duration alert settings don&amp;#8217;t persist after save.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-536&quot;&gt;HAWKULAR-536&lt;/a&gt; - License Check of imported node_modules&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-553&quot;&gt;HAWKULAR-553&lt;/a&gt; - Url input is not validated (enough)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-579&quot;&gt;HAWKULAR-579&lt;/a&gt; - &quot;Alert Settings&quot; link on URL details &amp;gt; All Alerts does notthing when clicked&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha4.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha4&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org///www.youtube.com/embed/nekjPRwf50U?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha4/hawkular-dist-1.0.0.Alpha4.zip&quot;&gt;Hawkular 1.0.0.Alpha4 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha4/hawkular-dist-1.0.0.Alpha4.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha4
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for September 25th, and we are looking forward to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deployment of new applications into managed servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Definition of jdbc drivers and data sources&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introduction to AutoResolve triggers</title>
      <link>http://www.hawkular.org/blog/2015/08/25/hawkular-alerts-autoresolve.html</link>
      <author>noreply@hawkular.org (Lucas Ponce)</author>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/25/hawkular-alerts-autoresolve.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts provide a simple Alert life-cycle management and an automated Alert resolution as core features.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_alert_lifecycle&quot;&gt;Alert Lifecycle&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Triggers are defined to detect problems. When a problem happens a new alert is generated by the engine
with the information about the data that matched the defined conditions. Also an Alert provides a simple lifecycle to
indicate the status of the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A new Alert starts with &lt;strong&gt;OPEN&lt;/strong&gt; status, optionally moves to &lt;strong&gt;ACKNOWLEDGED&lt;/strong&gt; to indicate the alert has been seen and the
issue is being resolved, and is finally set to &lt;strong&gt;RESOLVED&lt;/strong&gt; to indicate that the problem has been fixed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alert lifecycle can be handled manually or can be managed automatically by the AutoResolve tooling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_autoresolve_triggers&quot;&gt;AutoResolve triggers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A trigger has one or multiple conditions that are set to detect a problem. When incoming data matches the
condition expresions an alert is fired to inform about this new issue. In this context, if the engine is still
receiving data, new alerts will be generated even if it refers to the &lt;strong&gt;same&lt;/strong&gt; problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detection of multiple alerts belonging to the &lt;strong&gt;same&lt;/strong&gt; problem can be controlled with fine granularity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts allow to define that once a problem triggered an alert, the trigger is not going to evaluate more data
until the issue is resolved to avoid repeated alerts for the same issue.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Resolution of a problem can be done manually or automatically using &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; triggers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A trigger defines conditions that are responsible to detect a problem. These conditions are called &lt;strong&gt;FIRING&lt;/strong&gt; conditions
in Hawkular Alerts. Optionally, a trigger can define conditions that are responsible to detect when the problem is
gone. These new ones are called &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions. So, in the engine a trigger will be in &lt;strong&gt;FIRING&lt;/strong&gt; mode when it
is evaluating data to detect a problem while it will be a in &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; mode when it is evaluating data to detect that
the problem is no longer present.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These combination of &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions ensures that only &lt;strong&gt;one alert&lt;/strong&gt; is generated for a problem
and when the problem is resolved the trigger automatically returns to firing mode.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_example_of_alerting_on_process_availability&quot;&gt;Example of alerting on process availability&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s define a simple example to show how AutoResolve triggers work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/extended-tests/process-autoresolve/create-definition-check-process.sh&quot;&gt;create-definition-check-process.sh&lt;/a&gt; bash script
we have defined an AutoResolve trigger activating flags &lt;strong&gt;autoResolve&lt;/strong&gt; and &lt;strong&gt;autoResolveAlerts&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This fragment shows how to mark a trigger as AutoResolve:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;id&quot;: &quot;check-firefox-process&quot;,
 &quot;name&quot;: &quot;Firefox process&quot;,
 &quot;description&quot;: &quot;Check availability firefox process&quot;,
 &quot;actions&quot;: {
   &quot;email&quot;: [&quot;my-group-to-notify&quot;]
 },
 &quot;firingMatch&quot;: &quot;ALL&quot;,
 &quot;autoResolveMatch&quot;: &quot;ALL&quot;,
 &quot;enabled&quot;: true,
 &quot;autoDisable&quot;: false,
 &quot;autoEnable&quot;: false,
 &quot;autoResolve&quot;: true, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
 &quot;autoResolveAlerts&quot;: true, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
 &quot;severity&quot;: &quot;HIGH&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;autoResolve&lt;/strong&gt; flag set to &lt;strong&gt;true&lt;/strong&gt; indicates that the trigger will activate &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; modes. Flag set
to &lt;strong&gt;false&lt;/strong&gt; will run the trigger only in &lt;strong&gt;FIRING&lt;/strong&gt; mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;autoResolveAlerts&lt;/strong&gt; flag set to &lt;strong&gt;true&lt;/strong&gt; will automatically mark all unresolved alerts (for the trigger) as &lt;strong&gt;resolved&lt;/strong&gt;
when &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; trigger detect problem is gone. Flag set to &lt;strong&gt;false&lt;/strong&gt; will not modify the alert lifecycle.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And the next fragment will show how to declare &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions linked with the trigger:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;triggerMode&quot;: &quot;FIRING&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
 &quot;type&quot;: &quot;AVAILABILITY&quot;,
 &quot;dataId&quot;: &quot;firefox-process&quot;,
 &quot;operator&quot;: &quot;NOT_UP&quot;
}

...

{
 &quot;triggerMode&quot;: &quot;AUTORESOLVE&quot;, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
 &quot;type&quot;: &quot;AVAILABILITY&quot;,
 &quot;dataId&quot;: &quot;firefox-process&quot;,
 &quot;operator&quot;: &quot;UP&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;triggerMode&lt;/strong&gt; indicates in which mode will this condition be executed, &lt;strong&gt;FIRING&lt;/strong&gt; mode is used to detect the
problem we want to alert. In our example, it is an occurence of the Firefox process not being up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions are executed to detect when the probem is not present.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, in &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/extended-tests/process-autoresolve/send-data-check-process.sh&quot;&gt;send-data-check-process.sh&lt;/a&gt;
bash script we show how we can check and send availability data about process we want to monitor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The format of the payload is shown in the next fragment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;availability&quot;: [
    {&quot;id&quot;: &quot;firefox-process&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
     &quot;type&quot;: &quot;AVAILABILITY&quot;,
     &quot;timestamp&quot;: $timestamp,
     &quot;value&quot;: &quot;$firefox_availability&quot;
     }
 ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This &lt;strong&gt;id&lt;/strong&gt; should match the &lt;strong&gt;dataId&lt;/strong&gt; field defined in the conditions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Examples can be run using &lt;a href=&quot;/blog/2015/08/19/hawkular-alerts-standalone.html&quot;&gt;Hawkular Alerts in Standalone&lt;/a&gt;
deployment used in the previous post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details about Hawkular Alerts features can be found at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/dev/alerts.html&quot;&gt;Hawkular Alerts Developer Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/rest/rest-alerts.html&quot;&gt;Hawkular Alerts REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Using Hawkular Alerts as a standalone engine</title>
      <link>http://www.hawkular.org/blog/2015/08/19/hawkular-alerts-standalone.html</link>
      <author>noreply@hawkular.org (Lucas Ponce)</author>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/19/hawkular-alerts-standalone.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts is a component of the Hawkular project. It&amp;#8217;s goal is to provide flexible and scalable alerting services in a easily consumable way. Some of Hawkular Alerts features are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flexible, multi-condition Triggers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Powerful &quot;Dampening&quot; to control your alert firing rate .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simple Alert Life-cycle management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automated Trigger disable and enable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automated Alert Resolution by detecting the end of your alerting event.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pluggable Action and Notification capabilities to act on your alerts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complete REST API for Definition and Execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optional standalone deployment or get added value with Hawkular Metrics or Hawkular.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-platform deployment as a J2EE WAR file on JBoss WildFly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_standalone_deployments&quot;&gt;Standalone deployments&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the possibilities of the deployments is to use Alerts as a standalone component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this scenario, the engine can run on an Wildfly server and we can interact via Java or REST API to create alerts
definitions or feed data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Details of how to install and configure Hawkular Alerts can be found in the &lt;a href=&quot;http://www.hawkular.org/docs/components/alerts/index.html&quot;&gt;component documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hello_world&quot;&gt;Hello World&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s start using Hawkular Alerts with a small example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are going to create an alert definition like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;TRIGGER trigger-for-poc
WHEN
    data-x &amp;lt; 5 AND data-y &amp;gt; 5
HAPPENS
    2 consecutive times
THEN
    EMAIL to:admin-group@hawkular.org,cc:cc-group@hawkular.org&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;from this script &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/create-definitions.sh&quot;&gt;create-definitions.sh&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the example, we create a trigger with two conditions that is linked with an email action for alert notifications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that we have the definitions created on the engine, next step will be to send data to evaluate the conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For this example we are going to use directly the REST API from a bash script &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/send-data.sh&quot;&gt;send-data.sh&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The example sends random data to the engine, triggering alerts when two consecutive evaluations of the conditions
happens, then an email notification is sent with the action details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have created a &lt;a href=&quot;https://youtu.be/3i64kO0XEjw&quot;&gt;short demo&lt;/a&gt; showing the whole scenario.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org///www.youtube.com/embed/3i64kO0XEjw?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This example is quite simple and its goal is to show the flexibility to use the engine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details about Hawkular Alerts features can be found at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/dev/alerts.html&quot;&gt;Hawkular Alerts Developer Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/rest/rest-alerts.html&quot;&gt;Hawkular Alerts REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments,
 please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKALERTS&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Visualising Business Transaction Information using Hawkular BTM 0.3.0.Final with RTGov Integration</title>
      <link>http://www.hawkular.org/blog/2015/08/14/hawkular-btm-0.3.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Fri, 14 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/14/hawkular-btm-0.3.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Business Transaction Management (BTM) project has released version &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.3.0.Final&quot;&gt;0.3.0.Final&lt;/a&gt;. Some of the new features within this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Extract correlation ids, properties/details and message content from business transaction instances. This enables the generic information captured by instrumenting the underlying technologies to be enhanced with business specific information that can be useful for later analysis and to help correlate different parts of an overall business transaction instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BTM to RTGov gateway, to enable the business transaction instance data collected by BTM to be reported and visualised using RTGov (Runtime Governance) tooling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fault path handling for switchyard services.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To demonstrate the use of Hawkular BTM, to extract business transaction specific data and report the information to RTGov, we have created a &lt;a href=&quot;https://youtu.be/bxeRJAsAu_8&quot;&gt;short screencast&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org///www.youtube.com/embed/bxeRJAsAu_8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, all good things make three!</title>
      <link>http://www.hawkular.org/blog/2015/07/30/hawkular-1.0.0.Alpha3-released.html</link>
      <author>noreply@hawkular.org (Heiko Rupp)</author>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/30/hawkular-1.0.0.Alpha3-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release the third version of Hawkular!
As with the previous one, this was the most important release of Hawkular so far.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_app_server_support&quot;&gt;App server support&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus of this release clearly was the extended monitoring of &lt;a href=&quot;http://www.wildfly.org/&quot;&gt;WildFly&lt;/a&gt; application
servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
For the moment you will need to instrument your server manually following
&lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt;.
We will make this easier in the future.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deployments in the monitored server can now be enabled/disabled and redeployed. Deployment of new content
will come in the next release.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-server-deploy-detail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_deploy_actions.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_deploy_actions.png&quot; alt=&quot;Hawkular server deployments&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also have a new &lt;em&gt;web&lt;/em&gt;-tab that gives statistics about the web subsystem of the managed WildFly&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-webtab&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_web_tab.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_web_tab.png&quot; alt=&quot;Wildfly servers web stats&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_more_details_for_urls&quot;&gt;More details for URLs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular now also collects the current IP address and the server information for the URLs being monitored&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-url-detail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_url_traits.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_url_traits.png&quot; alt=&quot;URL details&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_notable_changes_in_this_release_were&quot;&gt;Notable changes in this release were:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implement more app server details as mentioned above&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade underlying versions of Hawkular-Metrics and other subsystems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More alerting capabilities&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to the &lt;a href=&quot;/releasenotes/1.0.0.Alpha3.html&quot;&gt;Full release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_demo&quot;&gt;Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have again run a demonstration of the new Hawkular features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org///www.youtube.com/embed/otLyoXYlV-s?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for August 26th, and
&lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha3/hawkular-dist-1.0.0.Alpha3.zip&quot;&gt;Hawkular 1.0.0.Alpha3 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha3/hawkular-dist-1.0.0.Alpha3.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha3
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the weeks until the next release and demo we want to address the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More details of the application servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uploading of new applications into managed servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More alerting related changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An easiert to grasp resource naming schema&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hopefully definition of jdbc drivers and data sources&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring a Vert.x Application using Hawkular BTM 0.2.0.Final</title>
      <link>http://www.hawkular.org/blog/2015/07/22/hawkular-btm-0.2.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/22/hawkular-btm-0.2.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Business Transaction Management (BTM) project has released version &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.2.0.Final&quot;&gt;0.2.0.Final&lt;/a&gt;. Some of the new features within this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;URI inclusion/exclusion support, allowing business transactions to be filtered based on initial URIs of interest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Propagate business transaction name, identified based on inclusion URI, through subsequent fragments for the same business transaction instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define instrumentation rules for Vert.x (HTTP and EventBus).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For those not familiar with &lt;a href=&quot;https://http://vertx.io&quot;&gt;Vert.x&lt;/a&gt;, it is an event driven, polyglot &quot;tool-kit for building reactive applications on the JVM&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To demonstrate the use of Hawkular BTM, to monitor business transactions executing on vert.x, we have created a &lt;a href=&quot;https://youtu.be/TtAXiYhqTSk&quot;&gt;short screencast&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org///www.youtube.com/embed/TtAXiYhqTSk?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, the second release!</title>
      <link>http://www.hawkular.org/blog/2015/07/02/hawkular-1.0.0.Alpha2-released.html</link>
      <author>noreply@hawkular.org (Heiko Rupp)</author>
      <pubDate>Thu, 2 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/02/hawkular-1.0.0.Alpha2-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release the second version of Hawkular!
As with the previous one, this was the most important release of Hawkular so far.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_app_server_support&quot;&gt;App server support&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus of this release clearly was the monitoring of &lt;a href=&quot;http://www.wildfly.org/&quot;&gt;WildFly&lt;/a&gt; application servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
For the moment you will need to instrument your server manually following
&lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt;.
We will make this easier in the future.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serverslist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_serverslist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_serverslist.png&quot; alt=&quot;Hawkular servers list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now when you click on a server name you can see some of the details like JVM-Info, defined Datasources and a list of
deployments on the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serversdetail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha2_appserver_details.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha2_appserver_details.png&quot; alt=&quot;Hawkular servers details&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_notable_changes_in_this_release_were&quot;&gt;Notable changes in this release were:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Move the underlying container to WildFly 9.0 CR2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implement some app server details as mentioned above&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade underlying versions of Hawkular-Metrics and other subsystems&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to the &lt;a href=&quot;/releasenotes/1.0.0.Alpha2.html&quot;&gt;Full release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_demo&quot;&gt;Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thomas Heute has run a demonstration of the new Hawkular features, that you can watch here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org///www.youtube.com/embed/MbGoVh4d6cA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for July 29th, and
&lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha2/hawkular-dist-1.0.0.Alpha2.zip&quot;&gt;Hawkular 1.0.0.Alpha2 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha2/hawkular-dist-1.0.0.Alpha2.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha2
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the weeks until the next release and demo we want to address the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More details of the application servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix issues that are reported around web site pings and existing appserver details&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start running operations on the managed servers like redeploying applications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_android_client&quot;&gt;Android client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you have seen in the demo video, Hawkular has an Android client, that is implemented by GSoC student
Arthur Dryomov. Here is the current version of its metrics screen&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serversdetail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha2_android_client.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha2_android_client.png&quot; alt=&quot;Android client metrics chart&quot; width=&quot;300&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-BTM 0.1.0 released</title>
      <link>http://www.hawkular.org/blog/2015/07/01/hawkular-btm-0-1-0-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 1 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/01/hawkular-btm-0-1-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.1.0 of the Hawkular Business Transaction Management project. The main focus for this release has been on capturing as much structural information about a business transaction as possible, with the minimum of configuration on the part of the user.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_highlights_of_this_release&quot;&gt;Highlights of this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Definition of the Business Transaction model for exchanging trace fragments related to business transaction execution across multiple systems/environments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic in-memory REST service for reporting and querying business transaction fragments (&lt;a href=&quot;http://www.hawkular.org/docs/rest/rest-btm.html&quot;&gt;REST API documentation&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration with Hawkular Accounts, to provide authorization and authentication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded business transaction collector (agent), leveraging &lt;a href=&quot;http://byteman.jboss.org&quot;&gt;ByteMan&lt;/a&gt; to instrument technologies of interest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide instrumentation rule model and translation to ByteMan rules (text based)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instrumentation agent tested in:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java standalone app (e.g. micro services)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wildfly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Karaf OSGi Container&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial instrumentation rules for:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Camel core&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP clients (apache httpclient, java HttpURLConnection, RESTEasy JAX-RS client)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JMS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Servlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JDBC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SwitchYard&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Only basic information for each of these technologies is currently recorded, so future releases will enhance these rules, as well as add rules for other relevant technologies. If you have particular technologies you are interested in instrumenting, then please raise a feature request in our jira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the release from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.1.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detailed release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12316120&amp;amp;version=12327163&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feature requests and bugs should be reported in our project &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to Juraci Paixão Kröhling for his help on integrating with Hawkular Accounts and Peter Palaga for his help with the release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring a SwitchYard Application using Hawkular BTM 0.1.0.Final</title>
      <link>http://www.hawkular.org/blog/2015/07/01/hawkular-btm-0.1.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 1 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/01/hawkular-btm-0.1.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular BTM 0.1.0.Final is the first release of the Hawkular Business Management project, and therefore currently only provides a minimal level of functionality. However despite the early stage of the project, this post will show how a business transaction implemented using SwitchYard can be monitored across two separate applications using JMS and Web Services.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post assumes that the Hawkular BTM 0.1.0.Final distribution has been downloaded and unzipped, and the &lt;strong&gt;&lt;em&gt;BTM_HOME&lt;/em&gt;&lt;/strong&gt; environment variable setup, as described in the &lt;a href=&quot;http://www.hawkular.org/docs/components/btm/index.html&quot;&gt;user documentation&lt;/a&gt;. The environment being monitored is &lt;strong&gt;SwitchYard 2.0.0.Final&lt;/strong&gt; installed in &lt;strong&gt;Wildfly 8.1.0.Final&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For this post, we will be deploying the SwitchYard &lt;em&gt;quickstarts/demos/multiApp&lt;/em&gt; example. Once SwitchYard has been installed in Wildfly, follow the instructions in the &lt;em&gt;multiApp/README.md&lt;/em&gt; to deploy the application into Wildfly. Once deployed, stop the Wildfly server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From a command window in the Wildfly &lt;em&gt;bin&lt;/em&gt; folder, run the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;. $BTM_HOME/client/env.sh
./standalone.sh -c standalone-full.xml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Simple as that! Now the Wildfly server, running the SwitchYard application, has been instrumented (using &lt;a href=&quot;http://byteman.jboss.org/&quot;&gt;ByteMan&lt;/a&gt;) to capture some information relevant for Business Transaction Management. However before performing any transactions we need to startup the Business Transaction Management Server. Go to the BTM distribution&amp;#8217;s root folder and run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;bin/standalone.sh -Dkeycloak.import=standalone/configuration/hawkular-realm.json \
                             -Djboss.socket.binding.port-offset=100&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;em&gt;keycloak.import&lt;/em&gt; argument is only required when starting the server for the first time, and initialises Hawkular Accounts (including setting up a default user &lt;strong&gt;jdoe&lt;/strong&gt; with password &lt;strong&gt;password&lt;/strong&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we are ready to perform a business transaction instance. Open a command window in the SwitchYard &lt;em&gt;quickstarts/demos/multiApp&lt;/em&gt; folder and run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn exec:java -Pwildfly --settings ../../settings.xml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That should return with a XML document indicating that the order has been accepted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now issue the following command, to request a list of business transaction fragments from the Business Transaction Management Server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;curl -X GET -u jdoe:password http://localhost:8180/hawkular/btm/transactions | python -m json.tool&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will generate two business transaction fragments, the first for the OrderService web service, and the second for the JMS application that receives the order and then invokes the OrderService web service. See the &lt;a href=&quot;data/blog/2015/btm/hawkular-btm-0.1.0-demo.json&quot;&gt;full JSON here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The condensed and annotated version of the first fragment is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;First business transaction fragment&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;    {
        &quot;id&quot;: &quot;9d037fcc-d3fc-4b51-a273-ae05d762ad32&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
        &quot;nodes&quot;: [
            {
                &quot;correlationIds&quot;: [
                    {
                        &quot;scope&quot;: &quot;Interaction&quot;,
                        &quot;value&quot;: &quot;d9c727d6-9688-4206-8db5-226fe73abb79&quot; &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
                    }
                ],
                &quot;details&quot;: {
                    &quot;btm_source&quot;: &quot;javax-servlet&quot;, &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
                    &quot;remoteAddr&quot;: &quot;127.0.0.1&quot;,
                    &quot;remoteHost&quot;: &quot;127.0.0.1&quot;
                },
                &quot;startTime&quot;: 1435758196356,
                &quot;type&quot;: &quot;Consumer&quot;,
                &quot;uri&quot;: &quot;http://localhost:8080/quickstart-demo-multiapp/OrderService&quot;,
                &quot;duration&quot;: 391,
                &quot;endpointType&quot;: &quot;HTTP&quot;,
                &quot;nodes&quot;: [
                    {
                        &quot;details&quot;: {
                            &quot;btm_source&quot;: &quot;switchyard&quot;
                        },
                        &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                        &quot;startTime&quot;: 1435758196555,
                        &quot;type&quot;: &quot;Service&quot;,
                        &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderService&quot;,
                        &quot;duration&quot;: 96,
                        &quot;nodes&quot;: [
                            {
                                &quot;details&quot;: {
                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                },
                                &quot;duration&quot;: 17,
                                &quot;nodes&quot;: [],
                                &quot;operation&quot;: &quot;lookupItem&quot;, &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                                &quot;startTime&quot;: 1435758196565,
                                &quot;type&quot;: &quot;Service&quot;,
                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderService/InventoryService&quot;
                            }
                        ]
                    }
                ]
            }
        ]
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Each business transaction fragment has a unique id&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This interaction based correlation id will link this business transaction fragment with the web service invocation in the second fragment below&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each node can provide additional details, which includes the &lt;em&gt;btm_source&lt;/em&gt; used to identify the technology that generated the node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This fragment shows one SwitchYard Service (OrderService) calling another SwitchYard Service (OrderService/InventoryService)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The condensed and annotated version of the second fragment is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Second business transaction fragment&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;    {
        &quot;id&quot;: &quot;bc832ed0-787d-47f0-993d-f37c1ca58b95&quot;,
        &quot;nodes&quot;: [
            {
                &quot;details&quot;: {
                    &quot;btm_source&quot;: &quot;javax-jms&quot;
                },
                &quot;startTime&quot;: 1435758194986,
                &quot;type&quot;: &quot;Consumer&quot;,
                &quot;uri&quot;: &quot;HornetQQueue[OrderRequestQueue]&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
                &quot;duration&quot;: 1904,
                &quot;endpointType&quot;: &quot;JMS&quot;,
                &quot;nodes&quot;: [
                    .... (removed nodes associated with camel components)
                        &quot;nodes&quot;: [
                            {
                                &quot;details&quot;: {
                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                },
                                &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
                                &quot;startTime&quot;: 1435758195245,
                                &quot;type&quot;: &quot;Service&quot;,
                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderInput&quot;,
                                &quot;duration&quot;: 1524,
                                &quot;nodes&quot;: [
                                     .... (removed nodes associated with camel components)
                                        &quot;nodes&quot;: [
                                            {
                                                &quot;details&quot;: {
                                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                                },
                                                &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
                                                &quot;startTime&quot;: 1435758195310,
                                                &quot;type&quot;: &quot;Service&quot;,
                                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderInputComponent/OrderWebService&quot;,
                                                &quot;duration&quot;: 1454,
                                                &quot;nodes&quot;: [
                                                    {
                                                        &quot;correlationIds&quot;: [
                                                            {
                                                                &quot;scope&quot;: &quot;Interaction&quot;,
                                                                &quot;value&quot;: &quot;d9c727d6-9688-4206-8db5-226fe73abb79&quot; &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                                                            }
                                                        ],
                                                        &quot;details&quot;: {
                                                            &quot;btm_source&quot;: &quot;java-httpurlconnection&quot;,
                                                            &quot;http_method&quot;: &quot;POST&quot;
                                                        },
                                                        &quot;duration&quot;: 35,
                                                        &quot;endpointType&quot;: &quot;HTTP&quot;,
                                                        &quot;startTime&quot;: 1435758196129,
                                                        &quot;type&quot;: &quot;Producer&quot;,
                                                        &quot;uri&quot;: &quot;http://localhost:8080/quickstart-demo-multiapp/OrderService&quot;
                                                    }
                    ....
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The business transaction is initiated by a message being received on a JMS queue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SwitchYard Service is called which then invokes a SwitchYard Reference with a web service binding&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The SwitchYard Reference is currently recorded as a separate Service node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP invocation with the matching interaction correlation id, linking this Producer node with the Consumer node in the first business transaction fragment&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These two business transaction fragments show how a business transaction instance can be traced across JMS, Apache Camel, SwitchYard and HTTP (Web Service), with the two fragments being correlated based on an ID shared between the HTTP Producer and Consumer nodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.4.0 release and the way beyond</title>
      <link>http://www.hawkular.org/blog/2015/06/23/hawkular-metrics-0-4-0-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/23/hawkular-metrics-0-4-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.4.0 of Hawkular Metrics. The release is anchored by new Counter metric
implementation, various stability enhancements, and Grafana integration updates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_updates&quot;&gt;Release Updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There was an email thread on Hawkular Devel List about 1 week ago that announced some minor changes to the
release process for Hawkular Metrics. This release is the first to apply the plan. Going forward, the project
will follow &lt;a href=&quot;https://developer.jboss.org/wiki/JBossProjectVersioning&quot;&gt;JBoss Project Versioning&lt;/a&gt; guidelines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To avoid confusion here is an explanation of the release version number. The current release 0.4.0.Final
contains the code that was initially planned under 0.3.5. The version bump was required to align the
release version with the release mechanics. But there are no surprising commits or changes in functionality
that were not expected to be released.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_here_is_a_list_of_major_changes_in_this_release&quot;&gt;Here is a list of major changes in this release:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added a new, Metrics specific, documentation section on the Hawkular  website&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation, configuration and Grafana integration are covered&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link: &lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/index.html&quot; class=&quot;bare&quot;&gt;http://www.hawkular.org/docs/components/metrics/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External Integration&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Grafana graph panel editor is now able to autocomplete the metric name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation regrading the Grafana integration is now covered by the official Hawkular Metrics documentation (see above)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heapster versions 0.14.0 and up can use Hawkular-Metrics as their time series data storage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updates to core API (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-113&quot;&gt;HWKMETRICS-113&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Metric is now a concrete type. GaugeMetric and AvailabilityMetric classes have been removed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The new DataPoint class replaces the former GaugeDataPoint and AvailabilityDataPoint classes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All of the new model classes are immutable. We will continue refactoring to make model classes immutable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Swagger and Jackson dependencies have been removed from core&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cassandra&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cassandra Java driver upgraded to version 2.1.6 (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-109&quot;&gt;HWKMETRICS-109&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded Cassandra is no longer part of the Hawkular Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cassandra is now an integral part of Hawkular Project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded Cassandra has been moved to &lt;a href=&quot;https://github.com/hawkular/hawkular-commons&quot;&gt;Hawkular Commons&lt;/a&gt; repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For now, will keep including the compatible embedded jar distribution as part of the release downloads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NOTE: the embedded Cassandra should only be used for testing, debugging, or developing Hawkular Metrics. In production
environments please use a full Cassandra deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated Counter Metric (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-53&quot;&gt;HWKMETRICS-53&lt;/a&gt;,
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-59&quot;&gt;HWKMETRICS-59&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Core and REST APIs support reading/writing counters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Core API supports generating and reading rates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REST API for rates will come in next release&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developer tools&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gatling load testing scenario added&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Source code: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/load-tests&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/tree/master/load-tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is part of the on-going effort for testing and performance profiling&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.4.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.4.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327451/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327451/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_0_5_0_beyond&quot;&gt;Hawkular Metrics 0.5.0 &amp;amp; Beyond&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Gauge Aggregates - Long-term storage of numeric metrics at the expense  of losing some fidelity. With task queue
released in 0.3.4, the expectation is to start the actual implementation 0.5.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update REST testing - while the current set of tests is a good gauge for regressions, the overall coverage is
still low.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved docker and kubernetes support - this is a long term goal for the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The counters will received improved REST API support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial support in the Python &amp;amp; Golang clients for counters&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A  big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Jirka Kremser, and Heiko Rupp for their  project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>MarsJUG and RivieraDEV retrospective</title>
      <link>http://www.hawkular.org/blog/2015/06/17/marsjug-and-rivieradev-retrospective.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Wed, 17 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/17/marsjug-and-rivieradev-retrospective.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently, I gave a talk in French at the &lt;a href=&quot;http://marsjug.org/&quot;&gt;Marseille Java User Group&lt;/a&gt;
and did it again last week at the &lt;a href=&quot;http://www.rivieradev.com/&quot;&gt;RivieraDEV&lt;/a&gt; conference.
The presentation was called &lt;em&gt;&quot;Tenir ses applications à l&amp;#8217;oeil avec Hawkular Metrics&quot;&lt;/em&gt; (&lt;em&gt;&quot;Keep an eye on your applications
with Hawkular Metrics&quot;&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m a MarsJUG &lt;em&gt;aficionado&lt;/em&gt;, so it was fun to be on the other side of the desk.
But it was my first time at RivieraDEV, and I have to say I was quite impressed.
The organization team did an awesome job, and the sessions I&amp;#8217;ve attended were all very interesting.
Needless to say, a conference located in the French Riviera has some advantages&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;fr&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;At the &lt;a href=&quot;https://twitter.com/hashtag/RivieraDev?src=hash&quot;&gt;#RivieraDev&lt;/a&gt; Speaker diner.  I must admit it : better than the &lt;a href=&quot;https://twitter.com/hashtag/devoxx?src=hash&quot;&gt;#devoxx&lt;/a&gt; one 😊 &lt;a href=&quot;http://t.co/6IVX0ZGYY7&quot;&gt;pic.twitter.com/6IVX0ZGYY7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Daniel De Luca (@danieldeluca) &lt;a href=&quot;https://twitter.com/danieldeluca/status/609077780114976768&quot;&gt;11 Juin 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;http://www.hawkular.org///platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I was well surprised to see the room packed for my presentation, as the RivieraDEV audience was mostly comprised of
developers, not system administrators. This is a good sign: more and more, monitoring tools draw attention
of the development side.&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p lang=&quot;fr&quot; dir=&quot;ltr&quot;&gt;Tenir ses applications à l&amp;#39;œil avec &lt;a href=&quot;https://twitter.com/hawkular_org&quot;&gt;@hawkular_org&lt;/a&gt; Metrics et &lt;a href=&quot;https://twitter.com/tsegismont&quot;&gt;@tsegismont&lt;/a&gt; ! &lt;a href=&quot;http://t.co/wul0NbeyTO&quot;&gt;pic.twitter.com/wul0NbeyTO&lt;/a&gt;&lt;/p&gt;&amp;mdash; RivieraDEV (@RivieraDEV) &lt;a href=&quot;https://twitter.com/RivieraDEV/status/609274503382831104&quot;&gt;June 12, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;http://www.hawkular.org///platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I came back home with very good feedback from the attendees.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_interoperability_idea_validated&quot;&gt;Interoperability idea validated&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the nicest questions I was asked at RivieraDEV was, in the following or similar terms:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m interested but I have Nagios everywhere, and I won&amp;#8217;t remove it. Can I use Hawkular with it?&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While we haven&amp;#8217;t worked on Nagios interoperability yet, we have a tool called
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot;&gt;PTrans&lt;/a&gt;, which listens to metric data sent
over several common protocols (&lt;em&gt;graphite&lt;/em&gt; and &lt;em&gt;collectd&lt;/em&gt; among others).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So Nagios integration is possible, and would be a very nice contribution (subliminal message).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_dashboards&quot;&gt;Dashboards&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s one thing to store data, but of course everyone wants to do something with it! So the ability to work with Grafana
on top of Hawkular Metrics was appreciated. And as promised to a participant,
there&amp;#8217;s now &lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/grafana_integration.html&quot;&gt;a guide for the setup&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But we&amp;#8217;re also working on our own charting Javascript library, so you&amp;#8217;ll be soon be able to create your own dashboards
or embed graphs in your applications.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_opentsdb_comparison&quot;&gt;OpenTSDB comparison&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the MarsJUG as well as RivieraDEV, I was asked how Hawkular Metrics relates to OpenTSDB, and why we don&amp;#8217;t use
OpenTSDB.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s my own opinion:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;It is similar in goals, I think: being simple to use (from a client), and capable of ingesting and storing
loads of data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With the RHQ project, we have experience in storing metric data in Apache Cassandra; it fits our known needs, so from
a user/customer support perspective, it feels more comfortable to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics can run on Microsoft Windows out-of-the-box; as far as I know, OpenTSDB cannot;
and this platform is not a niche for us.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics is probably simpler to administrate in small environments, because you don&amp;#8217;t have to deploy HBase.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it. You can review the
&lt;a href=&quot;http://fr.slideshare.net/ThomasSegismont/gardez-vosapplicationsloeilavechawkularmetrics&quot;&gt;slides&lt;/a&gt; online or download them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you attended one the sessions, I hope you enjoyed it. And see you next year hopefully!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, the first release!</title>
      <link>http://www.hawkular.org/blog/2015/06/04/hawkular-1.0.0.Alpha1-released.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Thu, 4 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/04/hawkular-1.0.0.Alpha1-released.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release our very first version of Hawkular!
This is an important milestone for us, one of many more to come.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What you can already do with this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Self register &amp;amp; login&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-welcome&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_welcome.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_welcome.png&quot; alt=&quot;Hawkular welcome page&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add URLs to monitor. Hawkular will tell you if your URLs are accessible and what was the response time from the server, it keeps history of this data and you can browse the graphs to see the data at a particular time. The monitoring data for URLs added by you can be seen by you only.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urllist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urllist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urllist.png&quot; alt=&quot;Hawkular URL list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be alerted by Email when certain thresholds are met with dampening to avoid false alerts&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urlavailability&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urlavailability.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urlavailability.png&quot; alt=&quot;Hawkular URL availability&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urlresponsetime&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urlresponsetime.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urlresponsetime.png&quot; alt=&quot;Hawkular URL response time&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add WildFly servers to monitor (for the moment you will need to instrument your server manually following &lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt; and Hawkular user interface will tell you if they are up or down).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serverslist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_serverslist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_serverslist.png&quot; alt=&quot;Hawkular servers list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is a lot more behind the scenes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics is a sub-project that allows you to store timeseries over a long period of time, this is based on the work done with the RHQ project and uses Cassandra in the background&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Alerts is a component used by Hawkular to manage alerts. It is extremely configurable through a rule based engine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The WildFly Agent exposes a lot of metrics from WildFly but also feed the inventory with deployments, datasources, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for July 1st, and &lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download it here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha1/hawkular-dist-1.0.0.Alpha1.zip&quot;&gt;Hawkular 1.0.0.Alpha1 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha1/hawkular-dist-1.0.0.Alpha1.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha1 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Oh, and we have a new logo, the hawk is looking at your apps, be kind to him!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-logo&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/hawkular_logo_200x200.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/hawkular_logo_200x200.png&quot; alt=&quot;Hawkular logo&quot; width=&quot;200&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.3.4 release and the way beyond</title>
      <link>http://www.hawkular.org/blog/2015/06/01/hawkular-metrics-0-3-4-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 1 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/01/hawkular-metrics-0-3-4-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.3.4 of Hawkular Metrics. The release is anchored by stability improvements and Docker + Kubernetes work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_here_are_the_release_highlights&quot;&gt;Here are the release highlights:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;InfluxDB Compatibility Layer&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pretty printing of query results with the &apos;pretty&apos; query parameter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;absolute moment operands in queries (ex: select * from test where time &amp;gt; 1501560s and time &amp;lt; 4560546h)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;various fixes which allow to integrate nicely with Grafana (declaring Hawkular Metrics as an InfluxDB 0.8 datasource)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RxJavaMigration&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;big refactoring to use RxJava instead of Guava&amp;#8217;s ListenableFuture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RxJava provides a much richer API for building asynchronous programs&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server Start-up&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the server no longer requires Cassandra to be started first&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;any client requests will get back a 503 response code if the server has not fully initialized due to Cassandra
being down at start up time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker and Kubernetes&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;all project docker images are now available in Docker Hub! Get them here:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://registry.hub.docker.com/u/hawkular/hawkular-metrics/&quot; class=&quot;bare&quot;&gt;https://registry.hub.docker.com/u/hawkular/hawkular-metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://registry.hub.docker.com/u/hawkular/hawkular-cassandra/&quot; class=&quot;bare&quot;&gt;https://registry.hub.docker.com/u/hawkular/hawkular-cassandra/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;improved replication controller support now means that both the Hawkular-Metrics and Cassandra images can be scaled
up or down&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;various other smaller improvements, including better support for when containers startup&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REST API (IMPORTANT!)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tenantId&lt;/code&gt; header was renamed to &lt;code&gt;Hawkular-Tenant&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tenantId&lt;/code&gt; header fallback was removed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GET {id}/tags&lt;/code&gt; only returns the tags, not the whole definition anymore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GET {id}&lt;/code&gt; returns the metric definition (see &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-110&quot;&gt;HWKMETRICS-110&lt;/a&gt; for
known issue)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UI Explorer&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;was removed from the project&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;discussions are underway to find a new home for the functionality and code (probably hawkular-ui-components)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;npm is no longer required to compile the project&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Task Queue&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a generic task queue was designed and developed as part of this release&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;provides functionality for scheduling and executing background tasks or jobs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;task execution is&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scalable - automatically distributed among Hawkular Metrics servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;durable - Tasks are persisted&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fault tolerant - Tasks are rescheduled for future execution when there is a failure&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it will serve as the foundation for&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;computing/storing aggregated metrics (i.e., rollups)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deleting metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;changing data retention&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this functionality will be basis for any background task based design for the project&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.4&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.4&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327259/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327259/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_0_3_5_and_beyond&quot;&gt;Hawkular Metrics 0.3.5 and Beyond&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Gauge Aggregates - Long-term storage of numeric metrics at the expense of losing some fidelity. With task queue
released in 0.3.4, the expectation is to start the actual implementation 0.3.5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update REST testing - while the current set of tests is a good gauge for regressions, the overall coverage is still
low. The plan for 0.3.5 is to increase coverage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved Docker and Kubernetes support - this is a long term goal for the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RXJava - the initial transition from Guava was done in 0.3.4. Future releases will build upon this foundation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project
contributions. Special mentions go to Jeeva Kandasamy and Jirka Kremser for their project help.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introducing the latest Hawkular component: Business Transaction Management</title>
      <link>http://www.hawkular.org/blog/2015/04/30/introducing-btm.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/30/introducing-btm.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m pleased to introduce a new component to the Hawkular family aimed at delivering a &lt;strong&gt;Business Transaction Management&lt;/strong&gt; solution. The initial focus will be on tracing a business transaction across a range of resources, on-premises and in the cloud, to provide an end to end view helping to isolate business transaction failures and performance bottlenecks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this stage we are still putting together high level plans and hope to start publishing more details of a roadmap over the coming weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have requirements in this area, please feel free to &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;create a jira&lt;/a&gt;, or discuss them on our &lt;a href=&quot;http://www.hawkular.org/community/join.html&quot;&gt;irc channel or dev mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hello GSoC Students</title>
      <link>http://www.hawkular.org/blog/2015/04/29/hello-to-gsoc-students.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/29/hello-to-gsoc-students.html</guid>
      	<description>
	&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org/http://2.bp.blogspot.com/-PutwgzAxESE/VT9mlQ41uVI/AAAAAAAA4Jc/PIkJV51Z5Zw/s1600/GoogleSummer_2015logo_horizontal.jpg&quot; alt=&quot;GSoC Logo&quot; width=&quot;320&quot; height=&quot;200&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are pretty happy, that Hawkular is participating in this years edition of
&lt;a href=&quot;https://www.google-melange.com/gsoc/dashboard/google/gsoc2015&quot;&gt;&lt;em&gt;Google Summer of Code&lt;/em&gt;&lt;/a&gt; (GSoC) with two
projects:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Aakarsh Agarwal on &lt;em&gt;Hawkular - pluggable data processors for metrics&lt;/em&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular-metrics deals with computation of
values and operations on the raw data. This project is aimed to develop interface for plugins that improve the
performance of Hawkular-Metrics making it more dependable, dynamic and extending the scope of its usage in operating
with data sets.Plugins are needed to apply statistical algorithms to the data and compute those necessary functions.
Such plugins may be plugged in at runtime whenever user wants it to.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Artur Dryomov on &lt;em&gt;Hawkular Android Client&lt;/em&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mobile phones, especially smartphones, came to our life very quickly.
We use them every day and sometimes more often than our computers. At the moment there is no way to use Hawkular
comfortably on Android, there is only a web interface. This conclusion assumes that some work should be done to
provide a new way of user interaction with Hawkular. My work is to implement this idea in an Android application for
Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The later proposal is done together with the Aerogear project. Daniel Passos from &lt;a href=&quot;https://aerogear.org&quot;&gt;AeroGear&lt;/a&gt; is
the official mentor for the student.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Intro to Hawkular, a middleware open-source management solution</title>
      <link>http://www.hawkular.org/blog/2015/04/14/intro-to-hawkular.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/14/intro-to-hawkular.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;strong class=&quot;big&quot;&gt;mission&lt;/strong&gt; of Hawkular is to provide an easy-to-use management solution with a particular focus on your &lt;strong class=&quot;big&quot;&gt;middleware applications&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our efforts are primarily about &lt;strong class=&quot;big&quot;&gt;monitoring&lt;/strong&gt; at this stage. We are putting a lot of efforts in providing a &lt;strong class=&quot;big&quot;&gt;usable user interface&lt;/strong&gt;, it&amp;#8217;s no longer an after-thought, the UI design actually drives a lot of the requirements (and don&amp;#8217;t worry all the capabilities of the UI interface are available through a REST interface, this is per design).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also think that alerts should be &lt;strong class=&quot;big&quot;&gt;smart&lt;/strong&gt; ! We definitely want to reduce the amount of false alerts to the minimum. A slower response time might not prove a dysfunction if there is a heavier usage of a system, it would be if the response time increase for no reason. Higher load and higher response time may trigger auto-scaling in a cloud environment… We also want to add &lt;strong class=&quot;big&quot;&gt;prediction&lt;/strong&gt; capabilities to let you react &lt;strong class=&quot;big&quot;&gt;before&lt;/strong&gt; things start breaking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Provisioning and configuration&lt;/div&gt;
Speaking of auto-scaling and cloud environment, in a later phase we (and/or &lt;a href=&quot;http://www.hawkular.org/community/join.html&quot;&gt;you&lt;/a&gt;?) will add provisioning and configurations of servers to Hawkular.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular will also help you with out of the box alert configurations that makes sense and that you can adjust/change/remove/add. Because we deal with many common issues through supporting our projects and products we aim at bringing that knowledge back into the monitoring tool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No matter if you belong to the SOA &quot;old-school&quot; or Micro Services &quot;hype&quot;, it&amp;#8217;s usually hard to properly get a grasp of the relations between multiple services running on multiple servers and how one can affect another one. It is our goal to focus on an application rather than on a plain list of servers. We&amp;#8217;ll help you visualize that infrastructure by discovering as much as possible the relationships between the various elements and making this graph of resources easy to browse, we&amp;#8217;ll want to tell you what applications are affected when a particular service, database, server&amp;#8230;&amp;#8203; is having issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As for the &lt;strong class=&quot;big&quot;&gt;current status&lt;/strong&gt;, we are heavily working on the core services (Metrics storing and collection, alerts, inventory, reactive architecture&amp;#8230;&amp;#8203;) but to get something usable today we are already providing a tool to monitor websites by providing its URL. You&amp;#8217;ll immediately get historical data about availability and response times on which you can decide to receive email notifications when something goes wrong. (&lt;a href=&quot;http://www.hawkular.org/blog/2015/04/09/alert-notifiers-for-mobile-devices.html&quot;&gt;Mobile push notifications and SMS using Twilio just made it&lt;/a&gt; and PagerDuty support is on its way ! Easily extensible)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ping-service&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/hawkular-intro1.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-intro1.png&quot; alt=&quot;Hawkular ping service&quot; width=&quot;800&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Hawkular ping service&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To &lt;strong class=&quot;big&quot;&gt;get started&lt;/strong&gt; you have several options (more info &lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use our docker image. Assuming you have docker already installed, it&amp;#8217;s also a very easy way to get started, here are the instructions:&lt;/p&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;sudo docker run -d -p 8081:8080 hawkular/hawkular&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open your web browser and go to &lt;a href=&quot;http://localhost:8081&quot; class=&quot;bare&quot;&gt;http://localhost:8081&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hawkular.org/docs/dev/development.html#_full_distribution&quot;&gt;Build from sources&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s fully open-source and as you can tell we are at the beginning of the journey (with 10+ years of experience with the &lt;a href=&quot;http://rhq-project.github.io/rhq/&quot;&gt;RHQ project&lt;/a&gt;),  feel free to contribute &lt;a href=&quot;https://lists.jboss.org/mailman/listinfo/hawkular-dev&quot;&gt;ideas&lt;/a&gt; and &lt;a href=&quot;https://github.com/hawkular/hawkular.git&quot;&gt;code&lt;/a&gt; and/or report &lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR&quot;&gt;issues&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it! Questions? Comments? Feel free to ask here or &lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;join us on Freenode&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Monitor Agent</title>
      <link>http://www.hawkular.org/blog/2015/04/14/hawkular-monitor-agent-intro.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/14/hawkular-monitor-agent-intro.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/hawkular/hawkular-agent&quot;&gt;Hawkular Monitor agent&lt;/a&gt; is in good enough shape now
to be able to blog about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Monitor agent is a Wildfly subsystem extension deployed as a module inside Wildfly.
At the time of writing, this currently works in Wildfly 8.2 Final.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You define what metrics you want to collect and what availabilty checks to make by adding metric sets and avail sets
to standalone.xml. You could also use the JBoss CLI to do this, rather than directly editing standalone.xml, if you wish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A sample configuration &lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-wildfly-monitor/src/main/assembly/subsystem.xml&quot;&gt;is found here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An example of a metric to be collected is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;metric-dmr name=&quot;heap.used&quot;
            interval=&quot;30&quot;
            timeUnits=&quot;seconds&quot;
            resource=&quot;/core-service=platform-mbean/type=memory&quot;
            attribute=&quot;heap-memory-usage#used&quot; /&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This defines a metric named &quot;heap.used&quot; which is the heap memory used by the WildFly VM.
The metric will be collected every 30 seconds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example of an availability check:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;avail-dmr name=&quot;app-server&quot;
           interval=&quot;30&quot;
           timeUnits=&quot;seconds&quot;
           resource=&quot;/&quot;
           attribute=&quot;server-state&quot;
           upRegex=&quot;run.*&quot; /&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will look at the WildFly&amp;#8217;s &quot;server-state&quot; and if its value matches the
regular expression &quot;run.*&quot; then this availability check will report UP. Otherwise, it will report DOWN.
If no upRegex is provided, then some simple heuristics are performed to determine the availability status
(specifically if the value is a number then a 0 is considered DOWN and non-zero is considered UP;
otherwise, if the value is the string &quot;up&quot; or &quot;ok&quot; (case insenstive) it is considered UP,
otherwise it is considered DOWN.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The full XML Schema for the Hawkular Monitor agent subsystem configuration can be
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-wildfly-monitor/src/main/resources/schema/hawkular-agent-monitor-subsystem.xsd&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently, what can be monitored or checked for availability is any resource in the WildFly management hierachy
(in the same WildFly where Hawkular Monitor agent is deployed). Future development is underway to allow the
Hawkular Monitor agent to monitor resources in remote WildFly instances, as well as remote JMX resources.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today, you have the option to store the metric and availability data directly to a Hawkular-Metrics instance or to
a Hawkular ecosystem (this is the &amp;lt;storage-adapter&amp;gt; definition). As the Hawkular ecosystem is built out (specifically, as inventory is brought into the picture),
a fuller integration with Hawkular Monitor agent will be possible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any questions on this, or suggestions on what features we need to add or enhance, please ping us on
the #hawkular freenode chat room or send an email to the &lt;a href=&quot;https://lists.jboss.org/mailman/listinfo/hawkular-dev&quot;&gt;hawkular-dev mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_to_build&quot;&gt;How To Build&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Clone &lt;a href=&quot;https://github.com/hawkular/hawkular-agent&quot;&gt;the source code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build via Maven: &quot;mvn clean install&quot;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Wildfly module that houses the Hawkular Monitor agent will be found in a zip file under hawkular-agent/hawkular-wildfly-monitor.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unzip the Hawkular Monitor agent into whatever Wildfly 8.2 instance you want.&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, you can use the Maven wildfly-extension-plugin to do this:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cd hawkular-agent/hawkular-wildfly-monitor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mvn -Dorg.hawkular.wildfly.home=/source/hawkular/kettle/target/wildfly-8.2.0.Final/ clean install wildfly-extension:deploy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notice the above command installed Hawkular Monitor agent inside my Hawkular Kettle build&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;dmr_client&quot;&gt;DMR Client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A standalone library has been included in the hawkular-agent repository that can be used to talk to a WildFly&amp;#8217;s
management interface via a more strongly-typed API that sits above the DMR API. The
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/tree/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient&quot;&gt;DMR Client&lt;/a&gt;
provides this capability in a single-jar library. The Hawkular Monitor agent uses it, but since it is a
standalone library, anyone that wants to talk to WildFly&amp;#8217;s management interface can use it. Currently, its snapshots are
released on Nexus which you can
&lt;a href=&quot;https://repository.jboss.org/nexus/content/repositories/snapshots/org/hawkular/agent/hawkular-dmr-client/&quot;&gt;find here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A simple example of its usage is as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;import org.jboss.as.controller.client.ModelControllerClient;
import org.hawkular.dmrclient.Address;
import org.hawkular.dmrclient.CoreJBossASClient;

// ...

ModelControllerClient mcc = ModelControllerClient.Factory.create(&quot;myhostname&quot;, 9990);
// now use the hawkular-dmr-client library
try (CoreJBossASClient client = new CoreJBossASClient(mcc)) {
    // get version of the wildfly instance from DMR root resource &quot;/&quot;
    String rv = client.getStringAttribute(&quot;release-version&quot;, Address.root());

    // get install directory of the WildFly instance from DMR resource &quot;/core-service=server-environment&quot;
    String hd = client.getStringAttribute(&quot;home-dir&quot;, Address.parse(&quot;/core-service=server-environment&quot;));
} catch (Exception e) {
    // do something about the error
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You no longer have to worry about how to build DMR ModelNodes in the correct format to perform these kinds of operations.
The Hawkular DMR Client API will build the ModelNode requests and process the ModelNode responses for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;CoreJBossASClient is one of several strongly-typed API objects that extend
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient/JBossASClient.java&quot;&gt;JBossASClient&lt;/a&gt;.
Others can be used to access common resource types in the DMR hierarchy, such as
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient/DatasourceJBossASClient.java&quot;&gt;DatasourceJBossASClient&lt;/a&gt;
which can be used to manipulate datasources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Alert notifiers for mobile devices</title>
      <link>http://www.hawkular.org/blog/2015/04/09/alert-notifiers-for-mobile-devices.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Thu, 9 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/09/alert-notifiers-for-mobile-devices.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts has new notifications senders which target mobile devices. Let&amp;#8217;s start with a brief explanation of
notification sending.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_notification_senders_work&quot;&gt;How notification senders work?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the alert engine detects a problem, it sends an action message to the configured sender(s) for this type of issue.
The action message has all the details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;which problem triggered the alert&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;who are the configured recipients&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/alert-action-plugins.png&quot; alt=&quot;Action plugins overview&quot; width=&quot;600&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Action plugins overview&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;The alert engine inspects notification data to determine which action messages should be sent to the Hawkular bus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then it sends a message for each configured notification (email/SMS/push).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Action plugins pick up their messages and build the notification with the details given in the notification message.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Makes sense? Now which new plugins do we have?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;unified_push_notifications&quot;&gt;Unified Push Notifications&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alert&amp;#8217;s &lt;code&gt;aerogear&lt;/code&gt; plugin is able to send notification messages to
&lt;a href=&quot;https://www.jboss.org/unifiedpush/&quot;&gt;Aerogear&amp;#8217;s Unified Push Server&lt;/a&gt;. Which means that you can send alerts as native push
messages to an Android, iOS, Windows or Firefox OS application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the time of writing, Hawkular doesn&amp;#8217;t have a mobile application for any of these platforms (an Android application
might come soon with the help of a Google Summer of Code student). So for demonstration purposes we&amp;#8217;ve built a sample
application, &lt;code&gt;Hawkugear&lt;/code&gt; and ran it with the Android Emulator.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkugear-android-app.png&quot; alt=&quot;Hawkugear Android application&quot; width=&quot;350&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Hawkugear Android application&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The application lacks proper formatting of course, but you can see on this screenshot that the notification message
landed properly on the mobile device after travelling through the Hawkular Bus, the Aerogear Unified Push Server and
Google Cloud&amp;#8217;s Messaging platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To configure the &lt;code&gt;aerogear&lt;/code&gt; sender plugin, add these system property definitions (with your own values) into your
Wildfly &lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.root.server.url&quot; value=&quot;http://localhost:9191/ag-push/&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.application.id&quot; value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.master.secret&quot; value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.aerogear.root.server.url:add(value=&quot;http://localhost:9191/ag-push/&quot;)
/system-property=org.hawkular.actions.aerogear.application.id:add(value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;)
/system-property=org.hawkular.actions.aerogear.master.secret:add(value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;short_message_service&quot;&gt;Short Message Service&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s also an &lt;code&gt;sms&lt;/code&gt; plugin which is built on &lt;a href=&quot;https://www.twilio.com/sms&quot;&gt;Twilio&amp;#8217;s SMS services&lt;/a&gt;. No mobile application
required here, all you need to do is to create a Twilio account and configure the plugin with your application &lt;code&gt;sid&lt;/code&gt;,
authorization &lt;code&gt;token&lt;/code&gt;, and &lt;code&gt;from&lt;/code&gt; number.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As for the &lt;code&gt;aerogear&lt;/code&gt; plugin, add these system property definitions (with your own values) into your Wildfly
&lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.sid&quot; value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.token&quot; value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.from&quot; value=&quot;+14158141829&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.sms.sid:add(value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;)
/system-property=org.hawkular.actions.sms.token:add(value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;)
/system-property=org.hawkular.actions.sms.from:add(value=&quot;+14158141829&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;more_to_come&quot;&gt;More to come&amp;#8230;&amp;#8203;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have planned to integrate with &lt;a href=&quot;http://www.pagerduty.com/&quot;&gt;PagerDuty&lt;/a&gt;. In the beginning, each notification message
will be sent with a new indentifier. As a consequence, PagerDuty will see recurrent notifications of the same problem
as different incidents. The Hawkular Alerts team is working on an incident worflow and we should be able to solve this
problem in the near future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it! Questions? Comments? Feel free to ask here or &lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;join us on Freenode&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Testing collectd integration</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-08-1.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Wed, 8 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-08-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics is able to store data coming from &lt;a href=&quot;http://collectd.org/&quot; target=&quot;_blank&quot;&gt;collectd&lt;/a&gt;. To enable this
feature, you need to start the
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot; target=&quot;_blank&quot;&gt;ptrans&lt;/a&gt; proxy, point it
to your Metrics server, and configure the collectd network plugin to send data to ptrans.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-stack&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org/../../img/blog/2015/collectd-ptrans-metrics.png&quot; alt=&quot;collectd/ptrans/metrics stack&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. collectd/ptrans/metrics stack&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Logo_der_Software_collectd.svg#/media/File:Logo_der_Software_collectd.svg&quot;&gt;
collectd logo by Florian Forster. Licensed under CC BY-SA 2.0 de via Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;regression_test_requirements&quot;&gt;Regression test requirements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make sure the collectd/ptrans/Hawkular stack never gets broken, we wanted to have an integration test. This test
should fill the following requirements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;do not fail the build on machines where collectd is not available (non-Linux developers machines, or simply machines
where collectd is not installed)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run on Travis-CI, where each pull request is tested before being merged&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make sure all data sent from collectd lands on the Hawkular Metrics server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run as quickly as possible&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s an outline of the implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;skip_test_when_collectd_is_not_available&quot;&gt;Skip test when collectd is not available&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Assumptions-with-assume&quot; target=&quot;_blank&quot;&gt;jUnit Assumptions&lt;/a&gt; provide a nice way
to test the presence of external dependencies. The default jUnit runner will skip the test if the assumption fails. So
skipping the test when collectd is not available is just a matter of testing if the collectd binary exists, is a regular
file, and is executable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;private static final String COLLECTD_PATH = System.getProperty(&quot;collectd.path&quot;, &quot;/usr/sbin/collectd&quot;);

// ...

@Before
public void setUp() throws Exception {
    // ...
    assumeCollectdIsPresent();
    // ...
}

private void assumeCollectdIsPresent() {
    Path path = Paths.get(COLLECTD_PATH);
    assumeTrue(COLLECTD_PATH + &quot; does not exist&quot;, Files.exists(path));
    assumeTrue(COLLECTD_PATH + &quot; is not a file&quot;, Files.isRegularFile(path));
    assumeTrue(COLLECTD_PATH + &quot; is not executable&quot;, Files.isExecutable(path));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_on_travis_ci&quot;&gt;Run on Travis-CI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.travis-ci.com/user/installing-dependencies/&quot;&gt;
Travis lets you customize the virtual running the build&lt;/a&gt;. Installing packages on the Ubuntu-based VM is very
straightforward, just add a couple of lines in the &lt;code&gt;before_install&lt;/code&gt; target of your &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq collectd collectd-utils&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;verify_data_has_landed_on_the_metrics_server&quot;&gt;Verify data has landed on the Metrics server&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;collectd lets you configure one or more &lt;em&gt;write plugins&lt;/em&gt;. The network plugin is required to send data to ptrans. We also
activate the csv plugin and make it log the measurements to &lt;em&gt;stdout&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;LoadPlugin csv
&amp;lt;Plugin csv&amp;gt;
    DataDir stdout
&amp;lt;/Plugin&amp;gt;

LoadPlugin network
&amp;lt;Plugin network&amp;gt;
    Server &quot;127.0.0.1&quot; &quot;25826&quot;
    ReportStats false
&amp;lt;/Plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then we start collectd, preventing it to fork to the background with the &lt;code&gt;-f&lt;/code&gt; option, and wait until a minimum number
of measurements has been sent:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@Test
public void shouldFindCollectdMetricsOnServer() throws Exception {

    // ...

    ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
    collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
    collectdProcessBuilder.command(collectdCmd.build());
    collectdProcess = collectdProcessBuilder.start();

    waitForCollectdValues();

    // ...

}

private void waitForCollectdValues() throws Exception {
    long c;
    do {
        Thread.sleep(MILLISECONDS.convert(1, SECONDS));
        c = Files.lines(collectdOut.toPath())
                 .filter(l -&amp;gt; l.startsWith(&quot;PUTVAL&quot;))
                 .collect(counting());
    } while (c &amp;lt; MINIMUM);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When enough measurements have been collected and sent, all we need to do is to parse collectd &lt;em&gt;stdout&lt;/em&gt; and compare with
server data, which can be loaded with an HTTP request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_as_quickly_as_possible&quot;&gt;Run as quickly as possible&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this point, all the ingredients can be combined to build an integration test. But the experience showed that running
it could take quite some time, even if the minimum number of measurements was low, and data collectd frequently (every
second).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A bit of investigation demonstrated that the test was spending an unexpected amount of time in  the
&lt;code&gt;waitForCollectdValues&lt;/code&gt; method. It turned out that buffering of collectd output was the cause. To avoid it, we can use
the &lt;code&gt;stdbuf&lt;/code&gt; tool from GNU &lt;code&gt;coreutils&lt;/code&gt;: as explained in the manual page, it&amp;#8217;s a tool to run a command &quot;with modified
buffering operations for its standard streams&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this slight modification, the test runs in a few seconds:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;File stdbuf = new File(&quot;/usr/bin/stdbuf&quot;);
ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
if (stdbuf.exists() &amp;amp;&amp;amp; stdbuf.canExecute()) {
    collectdCmd.add(stdbuf.getAbsolutePath(), &quot;-o0&quot;, &quot;-e0&quot;);
}
collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
collectdProcessBuilder.command(collectdCmd.build());
collectdProcess = collectdProcessBuilder.start();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.3.1 release</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-07-1.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 7 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-07-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello Everybody,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce a big milestone for the Hawkular Metrics project. We are releasing today for the
first time from the repository hosted by the Hawkular organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Major changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;UI&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The core UI has been migrated to Hawkular UI related projects (hawkular-ui-components, hawkular, and
hawkular-ui-services). The explorer project is still available for testing purposes.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;REST&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Consistent error reporting and status codes usage across endpoints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added Availability statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-35&quot;&gt;HWKMETRICS-35&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Total downtime duration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last downtime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Percentage of uptime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Number of downtimes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New Numeric Metric statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-34&quot;&gt;HWKMETRICS-34&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Average&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Median&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;95th Percentile&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The REST implementation has been decoupled from the actual core logic, which paves the way for alternate REST
implementations&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Core&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Large refactoring of the core classes and packages, the domain related logic has been pushed to the core layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Memory storage engine has been dropped from the project. Cassandra (embedded or standalone) is the exclusive
storage engine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;InfluxDB Integration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;  Influx Java client supports sending and reading data (it was not possible before because of the endoint URI
differences) to/from Hawkular Metrics. Other clients are not tested but should work as well.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;PTrans&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Configurable list of listeners (previously all collectd, ganglia, &amp;#8230;&amp;#8203; etc listeners were started)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fix: send data to Metrics server if the buffer is full or no data was received recently (previously data could
sit in the buffer and wait for the buffer to be full before being sent)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, and Heiko Rupp for their project contributions. Special mentions go to Jeeva Kandasamy, Jirka Kremser, and Michael Burman for their project help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce that Matt Wringe joined the Hawkular Metrics team with a focus on containers and project integrations. We are looking forward to his contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to comment on this post or join
&lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;#Hawkular on freenode&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Discontinued</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-01-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 1 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-01-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yesterday on March 31st, we had a good number of Meetings with other folks of JBoss in the new new
Red Hat office in Newcastle, called &lt;em&gt;The Pub&lt;/em&gt;.
Among others we were also discussing the future of Monitoring. After all the beers^w discussions we have decided to
discontinue Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We found out that software is always at fault:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;it does not have all the features users want&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is too slow (always!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much cpu&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So instead of investing more time and effort into Hawkular, we will replace it with this new Microservice&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public static String isHealthy(String resource) {
    return &quot;no&quot;;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the existing Hawkular source code will be donated to the 1. Association of Possibly Retired Invariant Lines of
code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks for your attention&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Dockerized Hawkular builds available</title>
      <link>http://www.hawkular.org/blog/2015/2015-03-30-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-03-30-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As described earlier, we have assembled all the components of Hawkular into a single package, the &lt;em&gt;Kettle&lt;/em&gt;.
This allows you to just build/download one package, start and work with it instead of caring of the individual
sub-packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make the process to play with Hawkular even easier, we have also created a build-pipeline that creates a Docker
image out of the Kettle and publishes it to Docker Hub as hawkular/hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download and run them like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ docker run -d -p 8081:8080 hawkular/hawkular&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the download of the image has finished, it will take a while until Hawkular is fully started up.
When it is up, you can reach the Hawkular UI at &lt;a href=&quot;http://localhost:8081/&quot; class=&quot;bare&quot;&gt;http://localhost:8081/&lt;/a&gt;  ( If you are
running docker on OS/X via boot2docker, you need to use the IP address that is stored in the &lt;code&gt;DOCKER_HOST&lt;/code&gt;
environment variable instead of &lt;code&gt;localhost&lt;/code&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More information is available in the
&lt;a href=&quot;/docs/user/getting-started&quot;&gt;Getting started&lt;/a&gt; document.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The Kettle starts boiling</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-24-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-24-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have been working hard the last weeks to integrate the individual pieces of hawkular into some &lt;em&gt;good old
distribution&lt;/em&gt;, basically a thingy you can check out, unzip and run. And here it is, the &lt;em&gt;Kettle&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/Kettle.png&quot; alt=&quot;Kettle&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To build the Kettle you basically checkout the Hawkular main repository and run &lt;code&gt;mvn install&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone https://github.com/hawkular/hawkular.git
cd hawkular
mvn install -Pdev -Dlicense.skip
cd kettle/target
cd wildfly-8.2.0.Final
bin/standalone.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can then point your web browser at &lt;a href=&quot;http://localhost:8080/&quot; class=&quot;bare&quot;&gt;http://localhost:8080/&lt;/a&gt; and use Hawkular.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.2.7 release</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-16-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-16-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular-metrics has published under its old name &lt;em&gt;rhq-metrics&lt;/em&gt; its version 0.2.7 release.
From Stefans announcement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I want to summarize the latest release of the RHQ Metrics project and the future of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_migrates_to_hawkular_organization&quot;&gt;RHQ Metrics migrates to Hawkular organization&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Release 0.2.7 of the RHQ Metrics is the last one from the current repository. But do not panic! Beyond the mechanics of the transfer and rename, the development will continue with the regular crew.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For the migration, two project repositories (rhq-metrics and rhq-metrics-openshift) will just be transferred to the Hawkular organization. The code from rhqm-charts was already moved to Hawkular, so we will just close the RHQ repository. We will have a follow up communication once all the infrastructure is in place under the new organization.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_0_2_7_was_released_today&quot;&gt;RHQ Metrics 0.2.7 was released today&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release has mainly stability fixes and minor enhancements. The Keycloak integration was delayed and not part of this release (as announced in the planning notes). For more details checkout the Github release notes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;openshift_cartridge_for_rhq_metrics_0_2_7&quot;&gt;OpenShift Cartridge for RHQ Metrics 0.2.7&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The cartridge supports RHQ Metrics 0.2.7, 0.2.6, and 0.2.5. Just a reminder, the cartridge is the simplest and easiest way to get a public facing instance of RHQ Metrics in just a few minutes with a single command. The cartridge configures Cassandra, Wildfly, and RHQ Metrics (REST interface and UI console) to run in a single gear. For more details please visit the Github repository of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sample command to create a new RHQ Metrics deployment:
rhc app create test_app &lt;a href=&quot;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&quot; class=&quot;bare&quot;&gt;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Repository:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics-openshift&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics-openshift&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you!&quot; goes to John Sanda, Mike Thompson, Heiko Rupp, and Thomas Segismont for their project contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to reply to this email or comment directly on the various forum threads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you,
Stefan Negrea&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel>
</rss>
