<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hawkular Blog</title>
    <link>http://www.hawkular.org</link>
    <atom:link href="http://www.hawkular.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>Blog posts about Hawkular - the open source monitoring and management platform</description>
    <language>en-us</language>
    <pubDate>Tue, 14 Apr 2015 20:17:07 +0000</pubDate>
    <lastBuildDate>Tue, 14 Apr 2015 20:17:07 +0000</lastBuildDate>

    <item>
      <title>Alert notifiers for mobile devices</title>
      <link>http://www.hawkular.org/blog/2015/04/09/alert-notifiers-for-mobile-devices.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/09/alert-notifiers-for-mobile-devices.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts has new notifications senders which target mobile devices. Let&amp;#8217;s start with a brief explanation of
notification sending.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_notification_senders_work&quot;&gt;How notification senders work?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the alert engine detects a problem, it sends an action message to the configured sender(s) for this type of issue.
The action message has all the details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;which problem triggered the alert&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;who are the configured recipients&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/alert-action-plugins.png&quot; alt=&quot;Action plugins overview&quot; width=&quot;600&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Action plugins overview&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;The alert engine inspects notification data to determine which action messages should be sent to the Hawkular bus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then it sends a message for each configured notification (email/SMS/push).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Action plugins pick up their messages and build the notification with the details given in the notification message.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Makes sense? Now which new plugins do we have?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;unified_push_notifications&quot;&gt;Unified Push Notifications&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alert&amp;#8217;s &lt;code&gt;aerogear&lt;/code&gt; plugin is able to send notification messages to
&lt;a href=&quot;https://www.jboss.org/unifiedpush/&quot;&gt;Aerogear&amp;#8217;s Unified Push Server&lt;/a&gt;. Which means that you can send alerts as native push
messages to an Android, iOS, Windows or Firefox OS application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the time of writing, Hawkular doesn&amp;#8217;t have a mobile application for any of these platforms (an Android application
might come soon with the help of a Google Summer of Code student). So for demonstration purposes we&amp;#8217;ve built a sample
application, &lt;code&gt;Hawkugear&lt;/code&gt; and ran it with the Android Emulator.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkugear-android-app.png&quot; alt=&quot;Hawkugear Android application&quot; width=&quot;350&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Hawkugear Android application&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The application lacks proper formatting of course, but you can see on this screenshot that the notification message
landed properly on the mobile device after travelling through the Hawkular Bus, the Aerogear Unified Push Server and
Google Cloud&amp;#8217;s Messaging platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To configure the &lt;code&gt;aerogear&lt;/code&gt; sender plugin, add these system property definitions (with your own values) into your
Wildfly &lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.root.server.url&quot; value=&quot;http://localhost:9191/ag-push/&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.application.id&quot; value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.master.secret&quot; value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.aerogear.root.server.url:add(value=&quot;http://localhost:9191/ag-push/&quot;)
/system-property=org.hawkular.actions.aerogear.application.id:add(value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;)
/system-property=org.hawkular.actions.aerogear.master.secret:add(value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;short_message_service&quot;&gt;Short Message Service&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s also an &lt;code&gt;sms&lt;/code&gt; plugin which is built on &lt;a href=&quot;https://www.twilio.com/sms&quot;&gt;Twilio&amp;#8217;s SMS services&lt;/a&gt;. No mobile application
required here, all you need to do is to create a Twilio account and configure the plugin with your application &lt;code&gt;sid&lt;/code&gt;,
authorization &lt;code&gt;token&lt;/code&gt;, and &lt;code&gt;from&lt;/code&gt; number.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As for the &lt;code&gt;aerogear&lt;/code&gt; plugin, add these system property definitions (with your own values) into your Wildfly
&lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.sid&quot; value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.token&quot; value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.from&quot; value=&quot;+14158141829&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.sms.sid:add(value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;)
/system-property=org.hawkular.actions.sms.token:add(value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;)
/system-property=org.hawkular.actions.sms.from:add(value=&quot;+14158141829&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;more_to_come&quot;&gt;More to come&amp;#8230;&amp;#8203;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have planned to integrate with &lt;a href=&quot;http://www.pagerduty.com/&quot;&gt;PagerDuty&lt;/a&gt;. In the beginning, each notification message
will be sent with a new indentifier. As a consequence, PagerDuty will see recurrent notifications of the same problem
as different incidents. The Hawkular Alerts team is working on an incident worflow and we should be able to solve this
problem in the near future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it! Questions? Comments? Feel free to ask here or &lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;join us on Freenode&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Testing collectd integration</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-08-1.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Wed, 8 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-08-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics is able to store data coming from &lt;a href=&quot;http://collectd.org/&quot; target=&quot;_blank&quot;&gt;collectd&lt;/a&gt;. To enable this
feature, you need to start the
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot; target=&quot;_blank&quot;&gt;ptrans&lt;/a&gt; proxy, point it
to your Metrics server, and configure the collectd network plugin to send data to ptrans.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-stack&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org/../../img/blog/2015/collectd-ptrans-metrics.png&quot; alt=&quot;collectd/ptrans/metrics stack&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. collectd/ptrans/metrics stack&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Logo_der_Software_collectd.svg#/media/File:Logo_der_Software_collectd.svg&quot;&gt;
collectd logo by Florian Forster. Licensed under CC BY-SA 2.0 de via Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;regression_test_requirements&quot;&gt;Regression test requirements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make sure the collectd/ptrans/Hawkular stack never gets broken, we wanted to have an integration test. This test
should fill the following requirements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;do not fail the build on machines where collectd is not available (non-Linux developers machines, or simply machines
where collectd is not installed)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run on Travis-CI, where each pull request is tested before being merged&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make sure all data sent from collectd lands on the Hawkular Metrics server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run as quickly as possible&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s an outline of the implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;skip_test_when_collectd_is_not_available&quot;&gt;Skip test when collectd is not available&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Assumptions-with-assume&quot; target=&quot;_blank&quot;&gt;jUnit Assumptions&lt;/a&gt; provide a nice way
to test the presence of external dependencies. The default jUnit runner will skip the test if the assumption fails. So
skipping the test when collectd is not available is just a matter of testing if the collectd binary exists, is a regular
file, and is executable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;private static final String COLLECTD_PATH = System.getProperty(&quot;collectd.path&quot;, &quot;/usr/sbin/collectd&quot;);

// ...

@Before
public void setUp() throws Exception {
    // ...
    assumeCollectdIsPresent();
    // ...
}

private void assumeCollectdIsPresent() {
    Path path = Paths.get(COLLECTD_PATH);
    assumeTrue(COLLECTD_PATH + &quot; does not exist&quot;, Files.exists(path));
    assumeTrue(COLLECTD_PATH + &quot; is not a file&quot;, Files.isRegularFile(path));
    assumeTrue(COLLECTD_PATH + &quot; is not executable&quot;, Files.isExecutable(path));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_on_travis_ci&quot;&gt;Run on Travis-CI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.travis-ci.com/user/installing-dependencies/&quot;&gt;
Travis lets you customize the virtual running the build&lt;/a&gt;. Installing packages on the Ubuntu-based VM is very
straightforward, just add a couple of lines in the &lt;code&gt;before_install&lt;/code&gt; target of your &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq collectd collectd-utils&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;verify_data_has_landed_on_the_metrics_server&quot;&gt;Verify data has landed on the Metrics server&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;collectd lets you configure one or more &lt;em&gt;write plugins&lt;/em&gt;. The network plugin is required to send data to ptrans. We also
activate the csv plugin and make it log the measurements to &lt;em&gt;stdout&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;LoadPlugin csv
&amp;lt;Plugin csv&amp;gt;
    DataDir stdout
&amp;lt;/Plugin&amp;gt;

LoadPlugin network
&amp;lt;Plugin network&amp;gt;
    Server &quot;127.0.0.1&quot; &quot;25826&quot;
    ReportStats false
&amp;lt;/Plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then we start collectd, preventing it to fork to the background with the &lt;code&gt;-f&lt;/code&gt; option, and wait until a minimum number
of measurements has been sent:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@Test
public void shouldFindCollectdMetricsOnServer() throws Exception {

    // ...

    ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
    collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
    collectdProcessBuilder.command(collectdCmd.build());
    collectdProcess = collectdProcessBuilder.start();

    waitForCollectdValues();

    // ...

}

private void waitForCollectdValues() throws Exception {
    long c;
    do {
        Thread.sleep(MILLISECONDS.convert(1, SECONDS));
        c = Files.lines(collectdOut.toPath())
                 .filter(l -&amp;gt; l.startsWith(&quot;PUTVAL&quot;))
                 .collect(counting());
    } while (c &amp;lt; MINIMUM);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When enough measurements have been collected and sent, all we need to do is to parse collectd &lt;em&gt;stdout&lt;/em&gt; and compare with
server data, which can be loaded with an HTTP request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_as_quickly_as_possible&quot;&gt;Run as quickly as possible&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this point, all the ingredients can be combined to build an integration test. But the experience showed that running
it could take quite some time, even if the minimum number of measurements was low, and data collectd frequently (every
second).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A bit of investigation demonstrated that the test was spending an unexpected amount of time in  the
&lt;code&gt;waitForCollectdValues&lt;/code&gt; method. It turned out that buffering of collectd output was the cause. To avoid it, we can use
the &lt;code&gt;stdbuf&lt;/code&gt; tool from GNU &lt;code&gt;coreutils&lt;/code&gt;: as explained in the manual page, it&amp;#8217;s a tool to run a command &quot;with modified
buffering operations for its standard streams&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this slight modification, the test runs in a few seconds:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;File stdbuf = new File(&quot;/usr/bin/stdbuf&quot;);
ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
if (stdbuf.exists() &amp;amp;&amp;amp; stdbuf.canExecute()) {
    collectdCmd.add(stdbuf.getAbsolutePath(), &quot;-o0&quot;, &quot;-e0&quot;);
}
collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
collectdProcessBuilder.command(collectdCmd.build());
collectdProcess = collectdProcessBuilder.start();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.3.1 release</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-07-1.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 7 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-07-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello Everybody,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce a big milestone for the Hawkular Metrics project. We are releasing today for the
first time from the repository hosted by the Hawkular organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Major changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;UI&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The core UI has been migrated to Hawkular UI related projects (hawkular-ui-components, hawkular, and
hawkular-ui-services). The explorer project is still available for testing purposes.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;REST&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Consistent error reporting and status codes usage across endpoints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added Availability statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-35&quot;&gt;HWKMETRICS-35&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Total downtime duration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last downtime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Percentage of uptime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Number of downtimes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New Numeric Metric statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-34&quot;&gt;HWKMETRICS-34&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Average&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Median&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;95th Percentile&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The REST implementation has been decoupled from the actual core logic, which paves the way for alternate REST
implementations&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Core&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Large refactoring of the core classes and packages, the domain related logic has been pushed to the core layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Memory storage engine has been dropped from the project. Cassandra (embedded or standalone) is the exclusive
storage engine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;InfluxDB Integration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;  Influx Java client supports sending and reading data (it was not possible before because of the endoint URI
differences) to/from Hawkular Metrics. Other clients are not tested but should work as well.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;PTrans&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Configurable list of listeners (previously all collectd, ganglia, &amp;#8230;&amp;#8203; etc listeners were started)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fix: send data to Metrics server if the buffer is full or no data was received recently (previously data could
sit in the buffer and wait for the buffer to be full before being sent)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, and Heiko Rupp for their project contributions. Special mentions go to Jeeva Kandasamy, Jirka Kremser, and Michael Burman for their project help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce that Matt Wringe joined the Hawkular Metrics team with a focus on containers and project integrations. We are looking forward to his contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to comment on this post or join
&lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;#Hawkular on freenode&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Discontinued</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-01-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 1 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-01-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yesterday on March 31st, we had a good number of Meetings with other folks of JBoss in the new new
Red Hat office in Newcastle, called &lt;em&gt;The Pub&lt;/em&gt;.
Among others we were also discussing the future of Monitoring. After all the beers^w discussions we have decided to
discontinue Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We found out that software is always at fault:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;it does not have all the features users want&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is too slow (always!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much cpu&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So instead of investing more time and effort into Hawkular, we will replace it with this new Microservice&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public static String isHealthy(String resource) {
    return &quot;no&quot;;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the existing Hawkular source code will be donated to the 1. Association of Possibly Retired Invariant Lines of
code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks for your attention&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Dockerized Hawkular builds available</title>
      <link>http://www.hawkular.org/blog/2015/2015-03-30-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-03-30-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As described earlier, we have assembled all the components of Hawkular into a single package, the &lt;em&gt;Kettle&lt;/em&gt;.
This allows you to just build/download one package, start and work with it instead of caring of the individual
sub-packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make the process to play with Hawkular even easier, we have also created a build-pipeline that creates a Docker
image out of the Kettle and publishes it to Docker Hub as hawkular/hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download and run them like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ docker run -d -p 8081:8080 hawkular/hawkular&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the download of the image has finished, it will take a while until Hawkular is fully started up.
When it is up, you can reach the Hawkular UI at &lt;a href=&quot;http://localhost:8081/&quot; class=&quot;bare&quot;&gt;http://localhost:8081/&lt;/a&gt;  ( If you are
running docker on OS/X via boot2docker, you need to use the IP address that is stored in the &lt;code&gt;DOCKER_HOST&lt;/code&gt;
environment variable instead of &lt;code&gt;localhost&lt;/code&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More information is available in the
&lt;a href=&quot;/docs/user/getting-started&quot;&gt;Getting started&lt;/a&gt; document.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The Kettle starts boiling</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-24-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-24-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have been working hard the last weeks to integrate the individual pieces of hawkular into some &lt;em&gt;good old
distribution&lt;/em&gt;, basically a thingy you can check out, unzip and run. And here it is, the &lt;em&gt;Kettle&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/Kettle.png&quot; alt=&quot;Kettle&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To build the Kettle you basically checkout the Hawkular main repository and run &lt;code&gt;mvn install&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone https://github.com/hawkular/hawkular.git
cd hawkular
mvn install -Pdev -Dlicense.skip
cd kettle/target
cd wildfly-8.2.0.Final
bin/standalone.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can then point your web browser at &lt;a href=&quot;http://localhost:8080/&quot; class=&quot;bare&quot;&gt;http://localhost:8080/&lt;/a&gt; and use Hawkular.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Metrics 0.2.7 release</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-16-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-16-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular-metrics has published under its old name &lt;em&gt;rhq-metrics&lt;/em&gt; its version 0.2.7 release.
From Stefans announcement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I want to summarize the latest release of the RHQ Metrics project and the future of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_migrates_to_hawkular_organization&quot;&gt;RHQ Metrics migrates to Hawkular organization&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Release 0.2.7 of the RHQ Metrics is the last one from the current repository. But do not panic! Beyond the mechanics of the transfer and rename, the development will continue with the regular crew.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For the migration, two project repositories (rhq-metrics and rhq-metrics-openshift) will just be transferred to the Hawkular organization. The code from rhqm-charts was already moved to Hawkular, so we will just close the RHQ repository. We will have a follow up communication once all the infrastructure is in place under the new organization.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_0_2_7_was_released_today&quot;&gt;RHQ Metrics 0.2.7 was released today&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release has mainly stability fixes and minor enhancements. The Keycloak integration was delayed and not part of this release (as announced in the planning notes). For more details checkout the Github release notes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;openshift_cartridge_for_rhq_metrics_0_2_7&quot;&gt;OpenShift Cartridge for RHQ Metrics 0.2.7&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The cartridge supports RHQ Metrics 0.2.7, 0.2.6, and 0.2.5. Just a reminder, the cartridge is the simplest and easiest way to get a public facing instance of RHQ Metrics in just a few minutes with a single command. The cartridge configures Cassandra, Wildfly, and RHQ Metrics (REST interface and UI console) to run in a single gear. For more details please visit the Github repository of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sample command to create a new RHQ Metrics deployment:
rhc app create test_app &lt;a href=&quot;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&quot; class=&quot;bare&quot;&gt;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Repository:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics-openshift&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics-openshift&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you!&quot; goes to John Sanda, Mike Thompson, Heiko Rupp, and Thomas Segismont for their project contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to reply to this email or comment directly on the various forum threads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you,
Stefan Negrea&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel>
</rss>
